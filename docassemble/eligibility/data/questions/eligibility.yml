metadata:
  title: Instant Attorney
  short title: Instant Attorney
  comment: Instant Attorney will be the first legal resource meta-search engine.
    This interview demonstrates the forthcoming ability to programmatically qualify
    for legal resources listed on Instant Attorney.
---
modules:
  - docassemble.base.util
  - docassemble.base.legal
  - docassemble.eligibility.fed_pov_guide
  - airtable
---
objects:
  - client: Individual
  - client.issue: Event
  - case: Case
  - provider: DAObject
  - provider.matches: DAList
---
mandatory: True
code: |
  if acknowledged_information_use == False:
    end_no_acknowledge
  if provider_select:
    provider_result_page
  else:
    end_no_result_page
---
code: |
  import sys
  import io

  # create file-like string to capture output
  codeOut = io.StringIO()
  codeErr = io.StringIO()

  # capture output and errors
  sys.stdout = codeOut
  sys.stderr = codeErr

  exec (provider_sentence)

  # restore stdout and stderr
  sys.stdout = sys.__stdout__
  sys.stderr = sys.__stderr__

  provider_qualify = qualify()

  provider_select = True

  s = codeErr.getvalue()

  print ("error:\n%s\n" % s)

  s = codeOut.getvalue()

  print ("output:\n%s" % s)
comment: |
  Qualification statement or bypass
---
code: |
  if client.issue.category != None and client.issue.address.state != None:
    nsmi_table = Airtable(eligibility_base, 'nsmi', api_key=get_config('airtable'))
    category_resources = nsmi_table.search('category_name', str(client.issue.category),
      fields=['category_name', 'eligibility_resource'], max_records=1000).pop()
    if 'eligibility_resource' in category_resources['fields']:
      eligibility_table = Airtable(eligibility_base, 'eligibility', api_key=get_config('airtable'))
      state_table = Airtable(eligibility_base, 'states', api_key=get_config('airtable'))
      progress = category_resources['fields']['eligibility_resource']
      for resource in category_resources['fields']['eligibility_resource']:
        record = eligibility_table.get(resource)
        if 'state' in record['fields']:
          record_state = state_table.get(record['fields']['state'].pop())
          if 'state_abbrev' in record_state['fields']:
            if client.issue.address.state == record_state['fields']['state_abbrev'] \
            and 'state_name' in record_state['fields'] \
            and 'resource_name' in record['fields'] \
            and 'qualify_sentence' in record['fields'] \
            and 'url' in record['fields']:
              match_record = DAObject()
              match_record.name = record['fields']['resource_name']
              match_record.category = client.issue.category
              match_record.state = record_state['fields']['state_name']
              match_record.qualify = False
              match_record.sentence = record['fields']['qualify_sentence']
              match_record.url = "[![" + record['fields']['resource_name'] + "](http://hackathon.myinstantattorney.com/playgroundstatic/3/external-link-alt-solid.png)](" + record['fields']['url'] + ")"
              provider.matches.append(match_record)
              provider.matches.there_are_any = True
    provider.matches.there_is_another = False
  if len(provider.matches) == 0:
    provider.matches.there_are_any = False
comment: |
  In this code block, the eligibility table is queried
---
table: provider_matches_table
rows: provider.matches
columns:
  - header: |
      Organization
    cell: |
      row_item.name
  - header: |
      Category
    cell: |
      row_item.category
  - header: |
      State
    cell: |
      row_item.state
  - header: |
      More Detail
    cell: |
      row_item.url
comment: |
  This creates the table to display the matches found.
---
question: |
  ${ client.issue.category } help found in ${ state_name(client.issue.address.state) }
subquestion: |
  ${ provider_matches_table }
field: provider_sentence
buttons:
  code: |
    [{match.sentence: 'Qualify for a ' + match.name + ' in ' + match.state} for match in provider.matches]
comment: |
  If provider is found, the user is shown the results
  with links to the pages.
---
code: |
  if len(provider.matches) == 0:
    provider_select = False
    provider_qualify = None
---
code: |
  eligibility_base = 'appTjL6HbRtZSScDo'
---
question: |
  Welcome to the Instant Attorney!
subquestion: |
  Instant Attorney will be the first legal resource meta-search engine.
  It will help users find the best legal resource for their need,
  including allowing them to programmatically qualify for a legal resource
  using the Eligibility Engine.

  All of the data being used in this demo can be found [here].

  Before continuing you must read and agree to the [terms of use] and [privacy policy].

  [here]: http://data.myinstantattorney.com
  [terms of use]: http://clerical.ai/legal-clerk-terms-of-use/
  [privacy policy]: http://clerical.ai/legal-clerk-privacy-policy/
help: |
  This is an example help page.
  Click "[Back to question]" to go to the previous screen and continue using Instant Attorney.
terms: 
  - green word: This is an example. Click it again to hide this definition.
fields:
  - Language: user_language
    default: en
    choices:
      - English: en
  - I agree: acknowledged_information_use
    datatype: yesno
    default: True
continue button field: start_page
comment: |
  This is the "splash screen" for Instant Attorney.
---
question: |
  Issue Category
subquestion: |
  Please select from one of the following categories.
  You can always come back to Instant Attorney for help
  with additional issues.
field: client.issue.category
combobox:
  - "Accidents, Injuries, and Problems with Others"
  - Crime and Prisons
  - Family
  - Health
  - Housing
  - Work
  - Traffic
  - Benefits
  - Estates and Wills
  - Immigration
  - "Money, Debt, and Consumer Issues"
  - Civil and Human Rights
  - Court and Lawyers
  - Disaster Relief
  - Education
  - Environmental Justice
  - Government Services
  - Native American Issues
  - Small Business
  - Veterans and Military
comment: |
  This allows the user to choose the category for their issue.
  These categories are from the draft National Subject Matter Index (NSMI) v2.0.
  As more categories and sub-categories are added, more triage can take place.
---
question: |
  Issue Location
subquestion: |
 Please select the state where the issue occured.
 Also, indicate whether this is different from
 where you live now.
fields:
  - Issue is in: client.issue.address.state
    input type: combobox
    code: |
      states_list()
  - This is also where I live now: issue_residence_same
    datatype: yesno
    default: True
  - I live in: client.address.state
    input type: combobox
    code: |
      states_list()
    show if:
      variable: issue_residence_same
      is: False
comment: |
  This allows a user to select their state.
  Eventually, the goal is to have this be international and not just for the US.
  Additionally, more narrow geolation will be desired such as the particular county.
  The user's state of residence, if different than the issue is currently unused.
---
event: end_no_acknowledge
question: |
  We're sorry we could not serve you online
subquestion: |
  Only users who accept the [terms of use and data use policy](http://clerical.ai/2018/11/28/terms-of-use-and-privacy-policy-for-guided-interviews/) may use this application.
buttons:
  - Restart: restart
  - Exit: exit
comment: |
  This is shown if the user does not accept the TOS.
---
event: provider_result_page
question: |
  The chances that you may qualify for
  ${ client.issue.category } help in
  ${ state_name(client.issue.address.state) }
  is {${ provider_qualify.lower() }}
buttons:
  - Restart: restart
  - Exit: exit
comment: |
  This is shown if the triage to a Instant Attorney yields a provider result.
terms: 
  - good: Based on the eligibility criteria, your chances to get assistance are favorable with the information you provided.
  - undetermined: Based on the eligibility criteria, your chances to have get assistance will depend upon additional information.
  - bad: Based on the eligibility criteria, your chances to get assistance are not favorable with the information you provided.
---
event: end_no_result_page
question: |
  Aw, shucks...
subquestion: |
  We were unable to find either a suitable Instant Attorney.

  If you think you need financial assitance
  for legal services then please
  search with the [Legal Services Corptoration]
  for a legal provider provider.

  [Legal Services Corptoration]: https://www.lsc.gov/what-legal-provider/find-legal-provider
buttons:
  - Restart: restart
  - Exit: exit
comment: |
  This is shown if the triage to a Instant Attorney was unsuccessful.
---
question: |
  What is your household size and annual household income?
fields:
  - Household size: household_size
    datatype: integer
  - Annual household income: household_income
    datatype: currency